package ru.job4j.thread;

/**
 * Атомарность
 * Атомарность - это свойство определяющее группу операций, которые выполняются неразрывно.
 * Определить НЕатомарные операции просто. Все операции, где данные зависят от начального состояния - не атомарны.
 * Эти операции можно описать через процесс "проверить и выполнить".
 *
 * Атомарная операция — это операция, которая выполняется полностью или не выполняется совсем,
 * частичное выполнение невозможно.
 *
 * @author Alex_life
 * @version 1.0
 * @since 11.09.2022
 */
public class CountShareMain {
    /**
     * Случай, когда две нити имеют ссылку на один и тот же объект.
     *
     * Число 2 не всегда будет выводиться в консоль, как бы очевидным это не казалось.
     * Это связано с тем, что операция инкремента - эта упрощенная запись трех операций:
     * 1. чтение переменной.
     * 2. увеличение локальной переменной на единицу.
     * 3. запись локальной переменной в общий ресурс.
     * Может возникнуть ситуация, что обе нити выполнят чтение переменной одновременно.
     * В результате этого общий ресурс обновится на единицу, а не на два.
     *
     * Если запустить около 15 раз - в этом можно убедиться лично
     */
    public static void main(String[] args) throws InterruptedException {
        Count count = new Count();
        Thread first = new Thread(count::increment);
        Thread second = new Thread(count::increment);
        first.start();
        second.start();
        first.join();
        second.join();
        System.out.println(count.get());
    }
}
